{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string",
            "defaultValue": "myCluster",
            "minLength": 1,
            "maxLength": 61,
            "metadata": {
                "description": "Name to give to this MJS."
            }
        },
        "numWorkerNodes": {
            "type": "int",
            "defaultValue": 2,
            "minValue": 0,
            "maxValue": 1000,
            "metadata": {
                "description": "Number of worker nodes to start up."
            }
        },
        "numWorkersPerNode": {
            "type": "int",
            "defaultValue": 2,
            "minValue": 1,
            "metadata": {
                "description": "Number of workers per node to start up."
            }
        },
        "headnodeInstanceType": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "minLength": 1,
            "metadata": {
                "description": "Azure instance type, see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes."
            }
        },
        "workerInstanceType": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "minLength": 1,
            "metadata": {
                "description": "Azure instance type, see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes."
            }
        },
        "databaseVolumeSize": {
            "type": "int",
            "defaultValue": 100,
            "minValue": 0,
            "maxValue": 4095,
            "metadata": {
                "description": "The size of the volume in Gigabytes used to store the database files. If set to 0, a separate volume will not be created and the root volume will be used for the database."
            }
        },
        "clientIPAddress": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "The IP address range that can be used to access the cluster from MATLAB. This must be a valid IP CIDR range of the form x.x.x.x/x. Use the value <your_public_ip_address>/32 to restrict access to only your computer."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "clouduser",
            "metadata": {
                "description": "Admin username."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password."
            }
        }
    },
    "variables": {
        "namingPrefix": "[toLower(take(parameters('clusterName'), 15))]",
        "ArtifactsBase": "https://raw.githubusercontent.com/mathworks-ref-arch/matlab-parallel-server-on-azure/master/",
        "addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/24",
        "virtualNetworkName": "[concat(variables('namingPrefix'), '-vnet')]",
        "subnetName": "[concat(variables('namingPrefix'), '-subnet')]",
        "providerID": "8AE0EA28-E1D4-4627-9459-99DD4120C96E",
        "headnodeMachineName": "[concat(take(variables('namingPrefix'), 6), '-headnode')]",
        "vmssName": "[concat(take(variables('namingPrefix'), 4), '-vmss')]",
        "publisher": "mathworks-inc",
        "offer": "matlab-parallel-server-ref-arch-vm-win-offer",
        "sku": "matlab-parallel-server-ref-arch-19a-vm-win-sku",
        "version": "2.0.0",
        "imageReference": {
            "publisher": "[variables('publisher')]",
            "offer": "[variables('offer')]",
            "sku": "[variables('sku')]",
            "version": "[variables('version')]"
        },
        "plan": {
            "name": "[variables('sku')]",
            "publisher": "[variables('publisher')]",
            "product": "[variables('offer')]"
        },
        "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
                "storageAccountType": "Premium_LRS"
            }
        },
        "storageProfileWithoutDisk": {
            "imageReference": "[variables('imageReference')]",
            "osDisk": "[variables('osDisk')]"
        },
        "storageProfileWithDisk": {
            "imageReference": "[variables('imageReference')]",
            "osDisk": "[variables('osDisk')]",
            "dataDisks": [
                {
                    "name": "[concat(variables('namingPrefix'), '-database')]",
                    "diskSizeGB": "[parameters('databaseVolumeSize')]",
                    "lun": 0,
                    "createOption": "Empty",
                    "caching": "None"
                }
            ]
        },
        "publicIPPostfix": "pub",
        "headnodeIPName": "[concat(variables('headnodeMachineName'), variables('publicIPPostfix'))]",
        "dnsLabelPrefix": "[concat('azure-', uniqueString(resourceGroup().id))]",
        "publicIpTimeout": "20",
        "networkInterfacePostfix": "nic",
        "publicIpConfigPostfix": "ipConfig",
        "networkSecurityGroupName": "[concat(variables('namingPrefix'), '-nsg')]",
        "totalPorts": "[add(7, mul(4, parameters('numWorkersPerNode')))]",
        "startPort": 27350,
        "finalPort": "[add(variables('startPort'), variables('totalPorts'))]",
        "storageAccountName": "[concat(take(concat(variables('namingPrefix'), uniquestring(resourceGroup().id)), 17), 'storage')]",
        "storageAccountType": "Standard_LRS",
        "scriptsUrl": "[concat(variables('ArtifactsBase'), 'scripts/')]",
        "startScript": "startmjs.ps1",
        "fileUris": [
            "[concat(variables('scriptsUrl'), variables('startScript'))]",
            "[concat(variables('scriptsUrl'), 'createFileShare.ps1')]",
            "[concat(variables('scriptsUrl'), 'listFileShares.ps1')]"
        ],
        "scriptExe": "[concat('./', variables('startScript'))]",
        "installCommand": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptExe'), ' -ClusterName ', parameters('clusterName'), ' -HeadnodeInternalHostname ', variables('headnodeMachineName'), ' -ReleaseDate ', '20190418', ' -LicenseServer mhlm')]",
        "installHeadnodeCommand": "[concat(variables('installCommand'), ' -Role headnode -NumWorkers 0')]",
        "installWorkerCommand": "[concat(variables('installCommand'), ' -Role worker -NumWorkers ', parameters('numWorkersPerNode'))]",
        "tagsForAll": {
            "provider": "[variables('providerID')]"
        }
    },
    "resources": [
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('headnodeIPName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('headnodeMachineName'), variables('dnsLabelPrefix'))]"
                },
                "idleTimeoutInMinutes": "[variables('publicIpTimeout')]"
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "tags": "[variables('tagsForAll')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "protocol": "Tcp",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "mathworks-job-scheduler-inbound",
                        "properties": {
                            "priority": 1010,
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "protocol": "Tcp",
                            "destinationPortRange": "[concat(variables('startPort'), '-', variables('finalPort'))]",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allow-internal-traffic",
                        "properties": {
                            "priority": 1020,
                            "sourceAddressPrefix": "VirtualNetwork",
                            "protocol": "Tcp",
                            "destinationPortRange": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('headnodeMachineName'), variables('networkInterfacePostfix'))]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', variables('headnodeIPName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('headnodeMachineName'), variables('publicIpConfigPostfix'))]",
                        "properties": {
                            "subnet": {
                                "id": "[reference(concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '2017-03-01').subnets[0].id]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('headnodeIPName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('headnodeMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('headnodeMachineName'), variables('networkInterfacePostfix'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "plan": "[variables('plan')]",
            "properties": {
                "osProfile": {
                    "computerName": "[variables('headnodeMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('headnodeInstanceType')]"
                },
                "storageProfile": "[if(greater(parameters('databaseVolumeSize'), 0), variables('storageProfileWithDisk'), variables('storageProfileWithoutDisk'))]",
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('headnodeMachineName'), variables('networkInterfacePostfix')))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('headnodeMachineName'), '/Installation')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('headnodeMachineName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[variables('fileUris')]"
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('installHeadnodeCommand'), ' -StorageAccountName ', variables('storageAccountName'), ' -StorageAccountKey ', listKeys(variables('storageAccountName'), '2017-06-01').keys[0].value, ' -HeadnodeExternalHostname ', reference(variables('headnodeIPName')).dnsSettings.fqdn, ' -HeadnodeInternalIPAddress ', reference(concat(variables('headnodeMachineName'), variables('networkInterfacePostfix'))).ipConfigurations[0].properties.privateIPAddress)]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[variables('vmssName')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', variables('headnodeIPName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('headnodeMachineName'), variables('networkInterfacePostfix'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "sku": {
                "name": "[parameters('workerInstanceType')]",
                "tier": "Standard",
                "capacity": "[parameters('numWorkerNodes')]"
            },
            "plan": "[variables('plan')]",
            "properties": {
                "overprovision": false,
                "upgradepolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[variables('vmssName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                            "provisionVmAgent": true
                        }
                    },
                    "storageProfile": "[variables('storageProfileWithoutDisk')]",
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('vmssName'), variables('networkInterfacePostfix'))]",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('vmssName'), variables('publicIpConfigPostfix'))]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[reference(concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '2017-03-01').subnets[0].id]"
                                                },
                                                "publicIpAddressConfiguration": {
                                                    "name": "[variables('publicIpPostfix')]",
                                                    "properties": {
                                                        "publicIpAllocationMethod": "Static",
                                                        "dnsSettings": {
                                                            "domainNameLabel": "[concat(variables('vmssName'), variables('dnsLabelPrefix'))]"
                                                        },
                                                        "idleTimeoutInMinutes": "[variables('publicIpTimeout')]"
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                        {
                            "name": "[concat(variables('vmssName'), 'installation')]",
                            "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "CustomScriptExtension",
                                "typeHandlerVersion": "1.5",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                    "fileUris": "[variables('fileUris')]"
                                },
                                "protectedSettings": {
                                    "commandToExecute": "[concat(variables('installWorkerCommand'), ' -StorageAccountName ', variables('storageAccountName'), ' -StorageAccountKey ', listKeys(variables('storageAccountName'), '2017-06-01').keys[0].value, ' -HeadnodeExternalHostname ', reference(variables('headnodeIPName')).dnsSettings.fqdn, ' -HeadnodeInternalIPAddress ', reference(concat(variables('headnodeMachineName'), variables('networkInterfacePostfix'))).ipConfigurations[0].properties.privateIPAddress)]"
                                }
                            }
                        }
                        ]
                    }
                }
            }
        },
        {
            "name": "[concat('pid-', toLower(variables('providerID')))]",
            "apiVersion": "2017-05-10",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [ ]
                }
            }
        }
    ],
    "outputs": {
        "virtualNetworkResourceID": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
            "type": "string"
        }
    }
}
